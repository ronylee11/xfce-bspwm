# valac
# Autogenerated from man page /usr/share/man/man1/valac.1.gz
complete -c valac -s '?' -l help -d 'Show help options . SS "Application Options:"'
complete -c valac -l vapidir -d 'Look for package bindings in DIRECTORY'
complete -c valac -l girdir -d 'Look for . gir files in DIRECTORY'
complete -c valac -l metadatadir -d 'Look for GIR . metadata files in DIRECTORY'
complete -c valac -l pkg -d 'Include binding for PACKAGE'
complete -c valac -l vapi -d 'Output VAPI file name'
complete -c valac -l library -d 'Library name'
complete -c valac -l shared-library -d 'Shared library name used in generated gir'
complete -c valac -l gir -d 'GObject-Introspection repository file name'
complete -c valac -s b -l basedir -d 'Base source directory'
complete -c valac -s d -l directory -d 'Change output directory from current working directory'
complete -c valac -l version -d 'Display version number'
complete -c valac -l api-version -d 'Display API version number'
complete -c valac -s C -l ccode -d 'Output C code'
complete -c valac -s H -l header -d 'Output C header file'
complete -c valac -l use-header -d 'Use C header file (DEPRECATED AND IGNORED)'
complete -c valac -l includedir -d 'Directory used to include the C header file'
complete -c valac -s h -l internal-header -d 'Output internal C header file'
complete -c valac -l internal-vapi -d 'Output vapi with internal api'
complete -c valac -l fast-vapi -d 'Output vapi without performing symbol resolution'
complete -c valac -l use-fast-vapi -d 'Use --fast-vapi output during this compile'
complete -c valac -l vapi-comments -d 'Include comments in generated vapi'
complete -c valac -l deps -d 'Write make-style dependency information to this file'
complete -c valac -l depfile -d 'Write make-style external dependency information for build systems to this fiâ€¦'
complete -c valac -l list-sources -d 'Output a list of all source and binding files which are used'
complete -c valac -l symbols -d 'Output symbols file'
complete -c valac -s c -l compile -d 'Compile but do not link'
complete -c valac -s o -l output -d 'Place output in file FILE'
complete -c valac -s g -l debug -d 'Produce debug information'
complete -c valac -l thread -d 'Enable multithreading support (DEPRECATED AND IGNORED)'
complete -c valac -l enable-mem-profiler -d 'Enable GLib memory profiler'
complete -c valac -s D -l define -d 'Define SYMBOL'
complete -c valac -l main -d 'Use SYMBOL as entry point'
complete -c valac -l nostdpkg -d 'Do not include standard packages'
complete -c valac -l disable-assert -d 'Disable assertions'
complete -c valac -l enable-checking -d 'Enable additional run-time checks'
complete -c valac -l enable-deprecated -d 'Enable deprecated features'
complete -c valac -l hide-internal -d 'Hide symbols marked as internal'
complete -c valac -l enable-experimental -d 'Enable experimental features'
complete -c valac -l disable-warnings -d 'Disable warnings'
complete -c valac -l fatal-warnings -d 'Treat warnings as fatal'
complete -c valac -l disable-since-check -d 'Do not check whether used symbols exist in local packages'
complete -c valac -s k -l keep-going -d 'Continue as much as possible after an error'
complete -c valac -l enable-experimental-non-null -d 'Enable experimental enhancements for non-null types'
complete -c valac -l enable-gobject-tracing -d 'Enable GObject creation tracing'
complete -c valac -l cc -d 'Use COMMAND as C compiler command'
complete -c valac -s X -l Xcc -d 'Pass OPTION to the C compiler'
complete -c valac -l pkg-config -d 'Use COMMAND as pkg-config command'
complete -c valac -l dump-tree -d 'Write code tree to FILE'
complete -c valac -l save-temps -d 'Keep temporary files'
complete -c valac -l profile -d 'Minimum runtime dependency: \'gobject\' (default) or \'posix\' (minimal libc) '
complete -c valac -s q -l quiet -d 'Do not print messages to the console'
complete -c valac -s v -l verbose -d 'Print additional messages to the console'
complete -c valac -l no-color -d 'Disable colored output, alias for --color=\\,never\\/'
complete -c valac -l color -d 'Enable color output, options are \'always\', \'never\', or \'auto\' '
complete -c valac -l target-glib -d 'Target version of glib for code generation'
complete -c valac -l gresources -d 'XML of gresources'
complete -c valac -l gresourcesdir -d 'Look for resources in DIRECTORY'
complete -c valac -l enable-version-header -d 'Write vala build version in generated files'
complete -c valac -l disable-version-header -d 'Do not write vala build version in generated files'
complete -c valac -l run-args -d 'Arguments passed to directly compiled executable'
complete -c valac -l abi-stability -d 'Enable support for ABI stability'

