# cryptsetup-reencrypt
# Autogenerated from man page /usr/share/man/man8/cryptsetup-reencrypt.8.gz
complete -c cryptsetup-reencrypt -l batch-mode -s q -d 'Suppresses all warnings and reencryption progress output'
complete -c cryptsetup-reencrypt -l block-size -s B -d 'Use re-encryption block size of <value> in MiB'
complete -c cryptsetup-reencrypt -l cipher -s c -d 'Set the cipher specification string'
complete -c cryptsetup-reencrypt -l debug -d 'Run in debug mode with full diagnostic logs'
complete -c cryptsetup-reencrypt -l decrypt -d 'Remove encryption (decrypt already encrypted device and remove LUKS header)'
complete -c cryptsetup-reencrypt -l device-size -d 'Instead of real device size, use specified value'
complete -c cryptsetup-reencrypt -l hash -s h -d 'Specifies the hash used in the LUKS1 key setup scheme and volume key digest'
complete -c cryptsetup-reencrypt -l header -d 'Use a detached (separated) metadata device or file where the LUKS header is s…'
complete -c cryptsetup-reencrypt -l iter-time -s i -d 'The number of milliseconds to spend with PBKDF2 passphrase processing for the…'
complete -c cryptsetup-reencrypt -l keep-key -d 'Do not change encryption key, just reencrypt the LUKS header and keyslots'
complete -c cryptsetup-reencrypt -l key-file -s d -d 'Read the passphrase from file'
complete -c cryptsetup-reencrypt -l key-size -s s -d 'Set key size in bits.  The argument has to be a multiple of  8'
complete -c cryptsetup-reencrypt -l key-slot -s S -d 'Specify which key slot is used.  For LUKS1, max keyslot number is 7'
complete -c cryptsetup-reencrypt -l keyfile-offset -d 'Skip value bytes at the beginning of the key file'
complete -c cryptsetup-reencrypt -l keyfile-size -s l -d 'Read a maximum of value bytes from the key file'
complete -c cryptsetup-reencrypt -l master-key-file -d 'Use new volume (master) key stored in a file'
complete -c cryptsetup-reencrypt -l new -s N -d 'Create new header (encrypt not yet encrypted device)'
complete -c cryptsetup-reencrypt -l pbkdf -d 'Set Password-Based Key Derivation Function (PBKDF) algorithm for LUKS keyslot'
complete -c cryptsetup-reencrypt -l pbkdf-force-iterations -d 'Avoid PBKDF benchmark and set time cost (iterations) directly'
complete -c cryptsetup-reencrypt -l pbkdf-memory -d 'Set the memory cost for PBKDF (for Argon2i/id the number represents kilobytes)'
complete -c cryptsetup-reencrypt -l pbkdf-parallel -d 'Set the parallel cost for PBKDF (number of threads, up to 4)'
complete -c cryptsetup-reencrypt -l progress-frequency -d 'Print separate line every <seconds> with reencryption progress'
complete -c cryptsetup-reencrypt -l reduce-device-size -d 'Enlarge data offset to specified value by shrinking device size'
complete -c cryptsetup-reencrypt -l tries -s T -d 'Number of retries for invalid passphrase entry'
complete -c cryptsetup-reencrypt -l type -d 'Use only while encrypting not yet encrypted device (see --new)'
complete -c cryptsetup-reencrypt -l use-directio -d 'Use direct-io (O_DIRECT) for all read/write data operations related to block …'
complete -c cryptsetup-reencrypt -l use-fsync -d 'Use fsync call after every written block'
complete -c cryptsetup-reencrypt -l use-urandom -d 'Define which kernel random number generator will be used to create the volume…'
complete -c cryptsetup-reencrypt -l uuid -d 'Use only while resuming an interrupted decryption process (see --decrypt)'
complete -c cryptsetup-reencrypt -l verbose -s v -d 'Print more information on command execution'
complete -c cryptsetup-reencrypt -l version -d 'Show the program version'
complete -c cryptsetup-reencrypt -l use-random
complete -c cryptsetup-reencrypt -l write-log

