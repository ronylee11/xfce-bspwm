# pip-install
# Autogenerated from man page /usr/share/man/man1/pip-install.1.gz
complete -c pip-install -s r -l requirement -d 'Install from the given requirements file'
complete -c pip-install -s c -l constraint -d 'Constrain versions using the given constraints file'
complete -c pip-install -l no-deps -d 'Don\\(aqt install package dependencies'
complete -c pip-install -l pre -d 'Include pre-release and development versions'
complete -c pip-install -s e -l editable -d 'Install a project in editable mode (i. e'
complete -c pip-install -s t -l target -d 'Install packages into <dir>'
complete -c pip-install -l platform -d 'Only use wheels compatible with <platform>'
complete -c pip-install -l python-version -d 'The Python interpreter version to use for wheel and "Requires-Python" compati…'
complete -c pip-install -l implementation -d 'Only use wheels compatible with Python implementation <implementation>, e. g'
complete -c pip-install -l abi -d 'Only use wheels compatible with Python abi <abi>, e. g.  \\(aqpypy_41\\(aq'
complete -c pip-install -l user -d 'Install to the Python user install directory for your platform.  Typically ~/'
complete -c pip-install -l root -d 'Install everything relative to this alternate root directory'
complete -c pip-install -l prefix -d 'Installation prefix where lib, bin and other top-level folders are placed'
complete -c pip-install -l src -d 'Directory to check out editable projects into'
complete -c pip-install -s U -l upgrade -d 'Upgrade all specified packages to the newest available version'
complete -c pip-install -l upgrade-strategy -d 'Determines how dependency upgrading should be handled [default: only-if-neede…'
complete -c pip-install -l force-reinstall -d 'Reinstall all packages even if they are already up-to-date'
complete -c pip-install -s I -l ignore-installed -d 'Ignore the installed packages, overwriting them'
complete -c pip-install -l ignore-requires-python -d 'Ignore the Requires-Python information'
complete -c pip-install -l no-build-isolation -d 'Disable isolation when building a modern source distribution'
complete -c pip-install -l use-pep517 -d 'Use PEP 517 for building source distributions (use --no-use-pep517 to force l…'
complete -c pip-install -l install-option -d 'Extra arguments to be supplied to the setup'
complete -c pip-install -l global-option -d 'Extra global options to be supplied to the setup'
complete -c pip-install -l compile -d 'Compile Python source files to bytecode'
complete -c pip-install -l no-compile -d 'Do not compile Python source files to bytecode'
complete -c pip-install -l no-warn-script-location -d 'Do not warn when installing scripts outside PATH'
complete -c pip-install -l no-warn-conflicts -d 'Do not warn about broken dependencies'
complete -c pip-install -l no-binary -d 'Do not use binary packages'
complete -c pip-install -l only-binary -d 'Do not use source packages'
complete -c pip-install -l prefer-binary -d 'Prefer older binary packages over newer source packages'
complete -c pip-install -l require-hashes -d 'Require a hash to check each requirement against, for repeatable installs'
complete -c pip-install -l progress-bar -d 'Specify type of progress to be displayed [off|on|ascii|pretty|emoji] (default…'
complete -c pip-install -l no-clean -d 'Don\\(aqt clean up build directories'

