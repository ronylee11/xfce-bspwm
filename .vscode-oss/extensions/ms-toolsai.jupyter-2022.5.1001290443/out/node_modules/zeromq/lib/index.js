"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var native_1=require("./native");exports.capability=native_1.capability,exports.context=native_1.context,exports.curveKeyPair=native_1.curveKeyPair,exports.version=native_1.version,exports.Context=native_1.Context,exports.Socket=native_1.Socket,exports.Observer=native_1.Observer,exports.Proxy=native_1.Proxy;const native_2=require("./native"),draft=require("./draft"),{send,receive}=native_2.methods;function asyncIterator(){return{next:async()=>{if(this.closed)return{done:!0};try{return{value:await this.receive(),done:!1}}catch(e){if(this.closed&&"EAGAIN"===e.code)return{done:!0};throw e}}}}Object.assign(native_2.Socket.prototype,{[Symbol.asyncIterator]:asyncIterator}),Object.assign(native_2.Observer.prototype,{[Symbol.asyncIterator]:asyncIterator}),native_2.Observer.prototype.hasOwnProperty("emitter")||Object.defineProperty(native_2.Observer.prototype,"emitter",{get:function(){const e=new(require("events").EventEmitter),t=this.receive.bind(this);return Object.defineProperty(this,"receive",{get:()=>{throw new Error("Observer is in event emitter mode. After a call to events.on() it is not possible to read events with events.receive().")}}),(async()=>{for(;!this.closed;){const n=await t();e.emit(n.type,n)}})(),Object.defineProperty(this,"emitter",{value:e}),e}}),native_2.Observer.prototype.on=function(...e){return this.emitter.on(...e)},native_2.Observer.prototype.off=function(...e){return this.emitter.off(...e)};class Pair extends native_2.Socket{constructor(e){super(0,e)}}exports.Pair=Pair,Object.assign(Pair.prototype,{send,receive});class Publisher extends native_2.Socket{constructor(e){super(1,e)}}exports.Publisher=Publisher,Object.assign(Publisher.prototype,{send});class Subscriber extends native_2.Socket{constructor(e){super(2,e)}subscribe(...e){if(0===e.length)this.setStringOption(6,null);else for(const t of e)this.setStringOption(6,t)}unsubscribe(...e){if(0===e.length)this.setStringOption(7,null);else for(const t of e)this.setStringOption(7,t)}}exports.Subscriber=Subscriber,Object.assign(Subscriber.prototype,{receive});class Request extends native_2.Socket{constructor(e){super(3,e)}}exports.Request=Request,Object.assign(Request.prototype,{send,receive});class Reply extends native_2.Socket{constructor(e){super(4,e)}}exports.Reply=Reply,Object.assign(Reply.prototype,{send,receive});class Dealer extends native_2.Socket{constructor(e){super(5,e)}}exports.Dealer=Dealer,Object.assign(Dealer.prototype,{send,receive});class Router extends native_2.Socket{constructor(e){super(6,e)}connect(e,t={}){t.routingId&&this.setStringOption(61,t.routingId),super.connect(e)}}exports.Router=Router,Object.assign(Router.prototype,{send,receive});class Pull extends native_2.Socket{constructor(e){super(7,e)}}exports.Pull=Pull,Object.assign(Pull.prototype,{receive});class Push extends native_2.Socket{constructor(e){super(8,e)}}exports.Push=Push,Object.assign(Push.prototype,{send});class XPublisher extends native_2.Socket{constructor(e){super(9,e)}set verbosity(e){switch(e){case null:this.setBoolOption(40,!1);break;case"allSubs":this.setBoolOption(40,!0);break;case"allSubsUnsubs":this.setBoolOption(78,!0)}}}exports.XPublisher=XPublisher,Object.assign(XPublisher.prototype,{send,receive});class XSubscriber extends native_2.Socket{constructor(e){super(10,e)}}exports.XSubscriber=XSubscriber,Object.assign(XSubscriber.prototype,{send,receive});class Stream extends native_2.Socket{constructor(e){super(11,e)}connect(e,t={}){t.routingId&&this.setStringOption(61,t.routingId),super.connect(e)}}function defineOpt(e,t,n,i,r=3,o){const s={};if(1&r){const e=`get${i}Option`;s.get=o?function(){return o[this[e](n)]}:function(){return this[e](n)}}if(2&r){const e=`set${i}Option`;s.set=o?function(t){this[e](n,o.indexOf(t))}:function(t){this[e](n,t)}}for(const n of e)n.prototype.hasOwnProperty(t)||Object.defineProperty(n.prototype,t,s)}exports.Stream=Stream,Object.assign(Stream.prototype,{send,receive}),defineOpt([native_2.Context],"ioThreads",1,"Int32"),defineOpt([native_2.Context],"maxSockets",2,"Int32"),defineOpt([native_2.Context],"maxSocketsLimit",3,"Int32",1),defineOpt([native_2.Context],"threadPriority",3,"Int32",2),defineOpt([native_2.Context],"threadSchedulingPolicy",4,"Int32",2),defineOpt([native_2.Context],"maxMessageSize",5,"Int32"),defineOpt([native_2.Context],"ipv6",42,"Bool"),defineOpt([native_2.Context],"blocky",70,"Bool");const writables=[Pair,Publisher,Request,Reply,Dealer,Router,Push,XPublisher,XSubscriber,Stream,draft.Server,draft.Client,draft.Radio,draft.Scatter,draft.Datagram];defineOpt(writables,"sendBufferSize",11,"Int32"),defineOpt(writables,"sendHighWaterMark",23,"Int32"),defineOpt(writables,"sendTimeout",28,"Int32"),defineOpt(writables,"multicastHops",25,"Int32");const readables=[Pair,Subscriber,Request,Reply,Dealer,Router,Pull,XPublisher,XSubscriber,Stream,draft.Server,draft.Client,draft.Dish,draft.Gather,draft.Datagram];defineOpt(readables,"receiveBufferSize",12,"Int32"),defineOpt(readables,"receiveHighWaterMark",24,"Int32"),defineOpt(readables,"receiveTimeout",27,"Int32"),defineOpt([native_2.Socket],"affinity",4,"Uint64"),defineOpt([Request,Reply,Router,Dealer],"routingId",5,"String"),defineOpt([native_2.Socket],"rate",8,"Int32"),defineOpt([native_2.Socket],"recoveryInterval",9,"Int32"),defineOpt([native_2.Socket],"type",16,"Int32",1),defineOpt([native_2.Socket],"linger",17,"Int32"),defineOpt([native_2.Socket],"reconnectInterval",18,"Int32"),defineOpt([native_2.Socket],"backlog",19,"Int32"),defineOpt([native_2.Socket],"reconnectMaxInterval",21,"Int32"),defineOpt([native_2.Socket],"maxMessageSize",22,"Int64"),defineOpt([native_2.Socket],"lastEndpoint",32,"String",1),defineOpt([Router],"mandatory",33,"Bool"),defineOpt([native_2.Socket],"tcpKeepalive",34,"Int32"),defineOpt([native_2.Socket],"tcpKeepaliveCount",35,"Int32"),defineOpt([native_2.Socket],"tcpKeepaliveIdle",36,"Int32"),defineOpt([native_2.Socket],"tcpKeepaliveInterval",37,"Int32"),defineOpt([native_2.Socket],"tcpAcceptFilter",38,"String"),defineOpt([native_2.Socket],"immediate",39,"Bool"),defineOpt([native_2.Socket],"ipv6",42,"Bool"),defineOpt([native_2.Socket],"securityMechanism",43,"Int32",1,[null,"plain","curve","gssapi"]),defineOpt([native_2.Socket],"plainServer",44,"Bool"),defineOpt([native_2.Socket],"plainUsername",45,"String"),defineOpt([native_2.Socket],"plainPassword",46,"String"),native_2.capability.curve&&(defineOpt([native_2.Socket],"curveServer",47,"Bool"),defineOpt([native_2.Socket],"curvePublicKey",48,"String"),defineOpt([native_2.Socket],"curveSecretKey",49,"String"),defineOpt([native_2.Socket],"curveServerKey",50,"String")),defineOpt([Router,Dealer,Request],"probeRouter",51,"Bool",2),defineOpt([Request],"correlate",52,"Bool",2),defineOpt([Request],"relaxed",53,"Bool",2);const conflatables=[Pull,Push,Subscriber,Publisher,Dealer,draft.Scatter,draft.Gather];if(defineOpt(conflatables,"conflate",54,"Bool",2),defineOpt([native_2.Socket],"zapDomain",55,"String"),defineOpt([Router],"handover",56,"Bool",2),defineOpt([native_2.Socket],"typeOfService",57,"Uint32"),native_2.capability.gssapi){defineOpt([native_2.Socket],"gssapiServer",62,"Bool"),defineOpt([native_2.Socket],"gssapiPrincipal",63,"String"),defineOpt([native_2.Socket],"gssapiServicePrincipal",64,"String"),defineOpt([native_2.Socket],"gssapiPlainText",65,"Bool");const e=["hostBased","userName","krb5Principal"];defineOpt([native_2.Socket],"gssapiPrincipalNameType",90,"Int32",3,e),defineOpt([native_2.Socket],"gssapiServicePrincipalNameType",91,"Int32",3,e)}defineOpt([native_2.Socket],"handshakeInterval",66,"Int32"),defineOpt([native_2.Socket],"socksProxy",68,"String"),defineOpt([XPublisher,Publisher],"noDrop",69,"Bool",2),defineOpt([XPublisher],"manual",71,"Bool",2),defineOpt([XPublisher],"welcomeMessage",72,"String",2),defineOpt([Stream],"notify",73,"Bool",2),defineOpt([Publisher,Subscriber,XPublisher],"invertMatching",74,"Bool"),defineOpt([native_2.Socket],"heartbeatInterval",75,"Int32"),defineOpt([native_2.Socket],"heartbeatTimeToLive",76,"Int32"),defineOpt([native_2.Socket],"heartbeatTimeout",77,"Int32"),defineOpt([native_2.Socket],"connectTimeout",79,"Int32"),defineOpt([native_2.Socket],"tcpMaxRetransmitTimeout",80,"Int32"),defineOpt([native_2.Socket],"threadSafe",81,"Bool",1),defineOpt([native_2.Socket],"multicastMaxTransportDataUnit",84,"Int32"),defineOpt([native_2.Socket],"vmciBufferSize",85,"Uint64"),defineOpt([native_2.Socket],"vmciBufferMinSize",86,"Uint64"),defineOpt([native_2.Socket],"vmciBufferMaxSize",87,"Uint64"),defineOpt([native_2.Socket],"vmciConnectTimeout",88,"Int32"),defineOpt([native_2.Socket],"interface",92,"String"),defineOpt([native_2.Socket],"zapEnforceDomain",93,"Bool"),defineOpt([native_2.Socket],"loopbackFastPath",94,"Bool");